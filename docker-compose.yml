version: '3.8'
services:
  config-service:
    image: 124355678220.dkr.ecr.ap-northeast-2.amazonaws.com/config-service:latest # ECR에 push한 이미지 이름
    container_name: config-service
    ports:
      - "8888:8888"
    env_file:
      - .env
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://52.78.66.41:8888/actuator/health" ]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 60s     # 첫 테스트 시행 시점, 컨테이너 가동 후 60초 후에 진행하라.
    networks:
      - msa-network
    restart: always # 인스턴스 시작하면 컨테이너도 실행 설정

  discovery-service:
    image: 124355678220.dkr.ecr.ap-northeast-2.amazonaws.com/discoveryservice:latest
    container_name: discovery-service
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://52.78.66.41:8761" ]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 60s     # 첫 테스트 시행 시점, 컨테이너 가동 후 60초 후에 진행하라.
    networks:
      - msa-network
    restart: always

  gateway-service:
    image: 124355678220.dkr.ecr.ap-northeast-2.amazonaws.com/gateway-service:latest
    container_name: gateway-service
    ports:
      - "8000:8000"
    networks:
      - msa-network
    depends_on:
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
    restart: always

  user-service:
    image: 124355678220.dkr.ecr.ap-northeast-2.amazonaws.com/user-service:latest
    container_name: user-service
    networks:
      - msa-network
    depends_on:
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
    restart: always

  order-service:
    image: 124355678220.dkr.ecr.ap-northeast-2.amazonaws.com/ordering-service:latest
    container_name: order-service
    networks:
      - msa-network
    depends_on:
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
    restart: always

  product-service:
    image: 124355678220.dkr.ecr.ap-northeast-2.amazonaws.com/product-service:latest
    container_name: product-service
    networks:
      - msa-network
    depends_on:
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
    restart: always

  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    networks:
      - msa-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP 포트
      - "15672:15672" # 관리 UI 포트
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - msa-network
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

networks:
  msa-network:
    driver: bridge  # Docker 의 기본 네트워크 드라이버. 동일한 호스트 내에서 통신할 수 있도록 설정.
